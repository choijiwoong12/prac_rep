import heapq
import sys
input = sys.stdin.readline
INF = int(1e9)
n,m,c = map(int,input().split())
graph = [[] for _ in range(n+1)]
for i in range(1,m+1):
  x,y,z = map(int,input().split())
  graph[x].append((y,z))
  
distance = [INF]*(n+1)

q = []
heapq.heappush(q,(0,c))
distance[c] = 0

while q:
  dist, now = heapq.heappop(q)
  if distance[now] < dist:
    continue
  
  for i in graph[now]:  
    cost = distance[now] + i[1]
    if distance[i[0]] > cost:
      distance[i[0]] = cost
    heapq.heappush(q,(cost,now))  

result1 = -1
result2 = 0
for i in distance:
  if i < INF:
    result1 += 1
    result2 = max(result2, i)
 
print(result1,result2)  
